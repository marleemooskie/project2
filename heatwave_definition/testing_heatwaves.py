# I'm using this script to test my heatwave definitions across all my sitesimport pandas as pdfrom matplotlib import pyplot as plt# Print all columnspd.set_option('display.max_columns',None)# pd.set_option('display.max_rows',None) # be careful with this, can back up system# Load climatological datahistorical_data = pd.read_csv('/Users/marleeyork/Documents/project2/data/extracted_daily_climate_data_wide_tmax.csv')historical_data.date = pd.to_datetime(historical_data.date)# Load in AmeriFlux hourly temperature dataAMF_data = loadAMF(path="/Users/marleeyork/Documents/project2/data/AMFdata_HH",                   measures=['TIMESTAMP_START','TA_F'])prec_data = loadAMF(path='/Users/marleeyork/Documents/project2/data/AMFdataDD',                    measures=['TIMESTAMP','P_F'])AMF_data.head()AMF_data.tail()prec_data.head()prec_data.tail()# Initialize empty dictionaryheatwaves = {}# Loop through each site and define heatwavesfor site in AMF_data.Site.unique():    # Isolate site of interest in climatological and AMF data    historical_site_data = historical_data[['date',site]]    flux_data = AMF_data[AMF_data['Site']==site]    site_moisture = prec_data[prec_data['Site']==site]        # Fit the heatwave defining function    site_heatwaves = fit_heatwaves(                      flux_dates = flux_data.TIMESTAMP_START,                       flux_temperature = flux_data.TA_F,                       historical_dates = historical_site_data['date'],                       historical_temperature = historical_site_data[site],                      quantile_threshold = .9,                      window_length = 15,                      threshold_comparison = 'greater',                      min_heatwave_length = 5,                      gap_days = 1,                      gap_days_window = 8,                      site = site                      )        # Getting precipitation conditions    site_heatwave_moisture = calculate_moisture(        timeseries_dates = site_moisture.TIMESTAMP,        timeseries_moisture = site_moisture.P_F,        start_dates = site_heatwaves['start_dates'],        end_dates = site_heatwaves['end_dates']        )        # Add heatwaves into a dictionary with their site    heatwaves[site] = site_heatwaves    heatwaves[site]['moisture'] = site_heatwave_moisture    # For each site, plot the heatwavesfor site in AMF_data.Site.unique():    print(site)    plt.show(heatwaves[site]["plot"])    print(heatwaves[site]["summary"])    # input("Press [enter] to continue...") # careful with this, can break things# Create a dataframe of all moisture conditionsall_moisture = pd.DataFrame(columns=['start_date','end_date','moisture_average','moisture_total','Site'])for site in AMF_data.Site.unique():    # Pull out moisture for the site    site_data = heatwaves[site]['moisture']    # Add a site column    site_data['Site'] = [site]*len(site_data)    # Concat site data with all other data    all_moisture = pd.concat([all_moisture,site_data])# Plot distributions of all moisture datafig, ax = plt.subplots(1,2)ax[0].set_title('Total Precipitation')ax[0].set_xlabel('Precipitation (mm)')ax[0].hist(all_moisture['moisture_total'],bins=30)ax[1].hist(all_moisture['moisture_average'],bins=30)ax[1].set_title('Average Precipitation')ax[1].set_xlabel('Precipitation (mm)')plt.show()