'''Date: 11/01/25This script is used to compare the heatwaves defined across the max, EHF, and Pezza approaches. It will compare the heatwaves defined across each site by thethree different approaches, as well as the distribution of moisture conditionsby the approaches.Importing the testing_heatwaves below will provide the following objects:    heatwaves, heatwaves_EHF, heatwaves_Pezza = heatwave dictionaries for each approach    all_precip, all_precip_EHF, all_precip_Pezza = precipitation dataframe for each approach    all_swc, all_swc_EHF, all_swc_Pezza = soil water content dataframe for each approach'''from testing_heatwaves import *import matplotlib.image as mpimgimport matplotlib.pyplot as pltimport pandas as pdimport seaborn as sns#################################################################################                             Comparison                                    ################################################################################## Now we are going to compare heatwaves defined across each of the 3 approaches# Just stacking the plots of each on top of eachotherfor site in AMF_data.Site.unique():    fig1 = heatwaves[site]['plot']    fig2 = heatwaves_EHF[site]['plot']    fig3 = heatwaves_Pezza[site]['plot']    fig1.savefig("plot1.png", bbox_inches="tight")    fig2.savefig("plot2.png", bbox_inches="tight")    fig3.savefig("plot3.png", bbox_inches="tight")    imgs = [mpimg.imread(f"plot{i}.png") for i in range(1, 4)]    fig, axes = plt.subplots(3, 1, figsize=(6, 12))    for ax, img in zip(axes, imgs):        ax.imshow(img)        ax.axis("off")    plt.tight_layout()    plt.show()    #################################################################################                             Summaries                                     ################################################################################## Printing the summaries of heatwaves for each site# Starting with the Max summariesfor site in AMF_data.Site.unique():    print(heatwaves[site]['summary'])    plt.show(heatwaves[site]["plot"])        # input("Press [enter] to continue...") # careful with this, can break things# EHF summariesfor site in heatwaves_EHF.keys():    print(heatwaves_EHF[site]['summary'])    plt.show(heatwaves_EHF[site]["plot"])    # Pezza summaries# Print each of the heatwave summarysfor site in heatwaves_Pezza.keys():    print(heatwaves_Pezza[site]['summary'])    plt.show(heatwaves_Pezza[site]["plot"])#################################################################################                             Moisture                                      ################################################################################## Plotting moisture from max approach# Plot distributions of all moisture datafig, ax = plt.subplots(1,3,figsize=(12,4))ax[0].set_title('Total Precipitation')ax[0].set_xlabel('Precipitation (mm)')ax[0].hist(all_precip['moisture_total'],bins=30)ax[1].hist(all_precip['moisture_average'],bins=30)ax[1].set_title('Average Precipitation')ax[1].set_xlabel('Precipitation (mm)')ax[2].hist(all_swc['moisture_average'],bins=30)ax[2].set_title('Average SWC')ax[2].set_xlabel('SWC (% at -2cm')plt.show()# Plotting moisture from EHF approach# Plot distributions of all moisture datafig, ax = plt.subplots(1,3,figsize=(12,4))ax[0].set_title('Total Precipitation')ax[0].set_xlabel('Precipitation (mm)')ax[0].hist(all_precip_EHF['moisture_total'],bins=30)ax[1].hist(all_precip_EHF['moisture_average'],bins=30)ax[1].set_title('Average Precipitation')ax[1].set_xlabel('Precipitation (mm)')ax[2].hist(all_swc_EHF['moisture_average'],bins=30)ax[2].set_title('Average SWC')ax[2].set_xlabel('SWC (% at -2cm)')plt.show()# Plotting moisture from Pezza approach# Plot distributions of all moisture datafig, ax = plt.subplots(1,3,figsize=(12,4))ax[0].set_title('Total Precipitation')ax[0].set_xlabel('Precipitation (mm)')ax[0].hist(all_precip_Pezza['moisture_total'],bins=30)ax[1].hist(all_precip_Pezza['moisture_average'],bins=30)ax[1].set_title('Average Precipitation')ax[1].set_xlabel('Precipitation (mm/day)')ax[2].hist(all_swc_Pezza['moisture_average'],bins=30)ax[2].set_title('Average SWC')ax[2].set_xlabel('SWC (% at -2cm)')plt.show()# Histogram of durationfig, ax = plt.subplots()plt.hist(all_precip_Pezza['Duration'])plt.show()#################################################################################                          Moisture by IGBP                                 ################################################################################## Importing site information to retrieve IGBPsite_data = pd.read_csv("/Users/marleeyork/Documents/project2/data/site_list.csv",encoding='latin1')# Isolate the site and IGBPIGBP = site_data[['Site ID','Vegetation Abbreviation (IGBP)']]IGBP.columns = ['Site','IGBP']# Merge with the swc dataframesall_swc = pd.merge(all_swc,IGBP,on='Site',how='inner').drop_duplicates()all_swc_EHF = pd.merge(all_swc_EHF,IGBP,on='Site',how='inner').drop_duplicates()all_swc_Pezza = pd.merge(all_swc_Pezza,IGBP,on='Site',how='inner').drop_duplicates()# Merge with precipitation dataframesall_precip = pd.merge(all_precip,IGBP,on='Site',how='inner').drop_duplicates()all_precip_EHF = pd.merge(all_precip_EHF,IGBP,on='Site',how='inner').drop_duplicates()all_precip_Pezza = pd.merge(all_precip_Pezza,IGBP,on='Site',how='inner').drop_duplicates()# Plot swc histograms grouped by site# Plotting for the max approachplt.figure(figsize=(8,6))sns.kdeplot(    data=all_swc[all_swc["moisture_average"] >= 0],    x="moisture_average",    hue="IGBP",    common_norm=False,    cut=0,           clip=(0, None),    linewidth=2)plt.xlim(0, None)plt.title("SWC Density of Heatwaves by IGBP (Max approach)")plt.xlabel("Average SWC")plt.ylabel("Density")plt.show()# Plotting for the EHF approachplt.figure(figsize=(8,6))sns.kdeplot(    data=all_swc_EHF[all_swc_EHF["moisture_average"] >= 0],    x="moisture_average",    hue="IGBP",    common_norm=False,    cut=0,           clip=(0, None),    linewidth=2)plt.xlim(0, None)plt.title("SWC Density of Heatwaves by IGBP (EHF approach)")plt.xlabel("SWC Average")plt.ylabel("Density")plt.show()# Plotting for the Pezza approachplt.figure(figsize=(8,6))sns.kdeplot(    data=all_swc_Pezza[all_swc_Pezza["moisture_average"] >= 0],    x="moisture_average",    hue="IGBP",    common_norm=False,    cut=0,           clip=(0, None),    linewidth=2)plt.xlim(0, None)plt.title("SWC Density of Heatwaves by IGBP (Pezza approach)")plt.xlabel("Average SWC")plt.ylabel("Density")plt.show()